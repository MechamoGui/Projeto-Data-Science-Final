# ---------------------------------------------------------------------------
# DASHBOARD INTERATIVO - PREVIS√ÉO DE CUSTOS DE SEGURO
# Descri√ß√£o: Um aplicativo web simples para prever os custos de seguro
#            usando o modelo treinado.
# Autor: Seu Nome
# Ferramenta: Streamlit
# ---------------------------------------------------------------------------

import streamlit as st
import pandas as pd
import joblib
import os
import matplotlib.pyplot as plt
import seaborn as sns

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="Previs√£o de Custos de Seguro",
    page_icon="üè•",
    layout="centered",
    initial_sidebar_state="expanded"
)


# --- Fun√ß√µes Auxiliares ---

# Usar cache para carregar o modelo apenas uma vez
@st.cache_data
def load_model(path):
    """Carrega o modelo a partir do caminho especificado."""
    if os.path.exists(path):
        modelo = joblib.load(path)
        return modelo
    else:
        st.error(f"Modelo n√£o encontrado em '{path}'. Por favor, treine o modelo primeiro.")
        return None

@st.cache_data
def load_data(path):
    """Carrega o dataset para visualiza√ß√µes."""
    if os.path.exists(path):
        df = pd.read_csv(path)
        return df
    else:
        st.error(f"Dataset n√£o encontrado em '{path}'.")
        return None


# --- Carregamento de Dados e Modelo ---
model_path = os.path.join('models', 'random_forest_regressor.pkl')
data_path = os.path.join('data', 'insurance.csv')

modelo_carregado = load_model(model_path)
df = load_data(data_path)


# --- Interface do Usu√°rio (Sidebar) ---
st.sidebar.title("Calculadora de Custo de Seguro")
st.sidebar.markdown("Insira as informa√ß√µes do cliente para prever o custo anual do seguro.")

# Inputs do usu√°rio
age = st.sidebar.slider("Idade", 18, 100, 35)
bmi = st.sidebar.slider("√çndice de Massa Corporal (IMC)", 15.0, 55.0, 26.5, 0.1)
children = st.sidebar.selectbox("N√∫mero de Filhos", [0, 1, 2, 3, 4, 5])
smoker = st.sidebar.radio("√â Fumante?", ("N√£o", "Sim"))
sex = st.sidebar.radio("Sexo", ("Masculino", "Feminino"))
region = st.sidebar.selectbox("Regi√£o", ("Noroeste", "Nordeste", "Sudoeste", "Sudeste"))


# --- Prepara√ß√£o dos Dados para Previs√£o ---
# Mapear os inputs para os valores que o modelo espera
sex_map = {"Masculino": "male", "Feminino": "female"}
smoker_map = {"Sim": "yes", "N√£o": "no"}
region_map = {
    "Noroeste": "northwest",
    "Nordeste": "northeast",
    "Sudoeste": "southwest",
    "Sudeste": "southeast"
}

# Criar um DataFrame com os dados do usu√°rio
input_data = pd.DataFrame({
    'age': [age],
    'sex': [sex_map[sex]],
    'bmi': [bmi],
    'children': [children],
    'smoker': [smoker_map[smoker]],
    'region': [region_map[region]]
})


# --- Previs√£o e Exibi√ß√£o do Resultado ---
st.title("üè• Previs√£o de Custos de Seguro M√©dico")
st.markdown("Este dashboard utiliza um modelo de Machine Learning para estimar os encargos m√©dicos de um indiv√≠duo com base em suas caracter√≠sticas.")

if modelo_carregado is not None:
    prediction = modelo_carregado.predict(input_data)[0]

    st.subheader("Resultado da Previs√£o")
    col1, col2 = st.columns(2)
    with col1:
        st.metric(
            label="Custo Anual Previsto",
            value=f"R$ {prediction:,.2f}".replace(",", "X").replace(".", ",").replace("X", "."),
            help="Este √© o valor estimado pelo modelo Random Forest."
        )

    with col2:
        if smoker == "Sim":
            st.warning("O fato de ser fumante aumenta significativamente o custo do seguro.")
        else:
            st.success("N√£o ser fumante √© um fator chave para manter os custos baixos.")


# --- Visualiza√ß√µes Claras (Etapa 5) ---
st.markdown("---")
st.header("Visualiza√ß√µes e Insights do Modelo")
st.markdown("Analisando os dados que treinaram o modelo, podemos extrair os seguintes insights:")

if df is not None:
    col1_viz, col2_viz = st.columns(2)

    with col1_viz:
        st.subheader("Custos: Fumantes vs. N√£o Fumantes")
        fig, ax = plt.subplots()
        sns.boxplot(x='smoker', y='charges', data=df, ax=ax, palette='viridis')
        ax.set_title("Impacto do Fumo nos Custos")
        ax.set_xlabel("Fumante")
        ax.set_ylabel("Custos (R$)")
        st.pyplot(fig)
        st.markdown("Como o gr√°fico mostra, ser fumante √© o fator de maior impacto individual no custo do seguro.")

    with col2_viz:
        st.subheader("Correla√ß√£o: Idade vs. Custos")
        fig, ax = plt.subplots()
        sns.scatterplot(x='age', y='charges', data=df, hue='smoker', ax=ax, alpha=0.6)
        ax.set_title("Rela√ß√£o entre Idade e Custos")
        ax.set_xlabel("Idade")
        ax.set_ylabel("Custos (R$)")
        st.pyplot(fig)
        st.markdown("H√° uma tend√™ncia clara de aumento dos custos com a idade, e essa tend√™ncia √© muito mais acentuada para fumantes.")
